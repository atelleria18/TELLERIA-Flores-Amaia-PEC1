setwd("~/Desktop/UOC/PEC1-Dataset/metaboData/Datasets/2018-Phosphoproteomics")
# Instalar y cargar el paquete readxl
if (!requireNamespace("readxl", quietly = TRUE))
install.packages("readxl")
library(readxl)
# Cargar el archivo Excel
file_path <- "path_to_your_file/TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
phospho_data <- read_excel(file_path)
# Instalar y cargar el paquete readxl
if (!requireNamespace("readxl", quietly = TRUE))
install.packages("readxl")
library(readxl)
# Cargar el archivo Excel
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
phospho_data <- read_excel(file_path)
# Verificar las primeras filas para entender la estructura de los datos
head(phospho_data)
# Cargar los paquetes necesarios
library(readxl)
library(SummarizedExperiment)
# Cargar el archivo Excel
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
phospho_data <- read_excel(file_path)
# Seleccionar la columna de secuencias y las columnas de abundancia de las muestras
phospho_data_filtered <- phospho_data %>%
select(SequenceModifications, M1_1_MSS, M1_2_MSS, M5_1_MSS, M5_2_MSS, T49_1_MSS, T49_2_MSS,
M42_1_PD, M42_2_PD, M43_1_PD, M43_2_PD, M64_1_PD, M64_2_PD)
# Install and load the dplyr package if not already installed
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
library(dplyr)
# Cargar el archivo Excel
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
phospho_data <- read_excel(file_path)
# Seleccionar la columna de secuencias y las columnas de abundancia de las muestras
phospho_data_filtered <- phospho_data %>%
select(SequenceModifications, M1_1_MSS, M1_2_MSS, M5_1_MSS, M5_2_MSS, T49_1_MSS, T49_2_MSS,
M42_1_PD, M42_2_PD, M43_1_PD, M43_2_PD, M64_1_PD, M64_2_PD)
# Verificar las primeras filas de los datos filtrados
head(phospho_data_filtered)
# Load required libraries
library(readxl)
library(SummarizedExperiment)
# Load data
file_path <- "path/to/your/TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
data <- read_excel(file_path)
# Load required libraries
library(readxl)
library(SummarizedExperiment)
# Load data
file_path <- "path/to/your/TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
data <- read_excel(file_path)
# Load required libraries
library(readxl)
library(SummarizedExperiment)
# Load data
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
data <- read_excel(file_path)
# Prepare data matrix and metadata
data_matrix <- as.matrix(data[ , c("M1_1_MSS", "M1_2_MSS", "M5_1_MSS", "M5_2_MSS",
"T49_1_MSS", "T49_2_MSS", "M42_1_PD", "M42_2_PD",
"M43_1_PD", "M43_2_PD", "M64_1_PD", "M64_2_PD")])
# Metadata for rows (samples)
sample_metadata <- data.frame(
row.names = colnames(data_matrix),
condition = c(rep("MSS", 6), rep("PD", 6))
)
# Create SummarizedExperiment object
se <- SummarizedExperiment(
assays = list(counts = data_matrix),
colData = sample_metadata
)
# Load required libraries
library(readxl)
library(SummarizedExperiment)
# Load data
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
data <- read_excel(file_path)
# Prepare data matrix and metadata
data_matrix <- as.matrix(data[ , c("M1_1_MSS", "M1_2_MSS", "M5_1_MSS", "M5_2_MSS",
"T49_1_MSS", "T49_2_MSS", "M42_1_PD", "M42_2_PD",
"M43_1_PD", "M43_2_PD", "M64_1_PD", "M64_2_PD")])
# Metadata for rows (samples)
sample_metadata <- data.frame(
row.names = colnames(data_matrix),
condition = c(rep("MSS", 6), rep("PD", 6))
)
# Create SummarizedExperiment object
se <- SummarizedExperiment(
assays = list(counts = data_matrix),
colData = sample_metadata
)
# Summary statistics
summary(assay(se, "counts"))
# Boxplot to visualize distribution
boxplot(assay(se, "counts"))
# Heatmap to explore patterns in data
heatmap(assay(se, "counts"), Rowv = NA, Colv = NA, scale = "column")
# Load required libraries
library(readxl)
library(SummarizedExperiment)
# Load data
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
data <- read_excel(file_path)
# Prepare data matrix and metadata
data_matrix <- as.matrix(data[ , c("M1_1_MSS", "M1_2_MSS", "M5_1_MSS", "M5_2_MSS",
"T49_1_MSS", "T49_2_MSS", "M42_1_PD", "M42_2_PD",
"M43_1_PD", "M43_2_PD", "M64_1_PD", "M64_2_PD")])
# Metadata for rows (samples)
sample_metadata <- data.frame(
row.names = colnames(data_matrix),
condition = c(rep("MSS", 6), rep("PD", 6))
)
# Create SummarizedExperiment object
se <- SummarizedExperiment(
assays = list(counts = data_matrix),
colData = sample_metadata
)
# Summary statistics
summary(assay(se, "counts"))
# Boxplot to visualize distribution
boxplot(assay(se, "counts"))
# Heatmap to explore patterns in data
heatmap(assay(se, "counts"), Rowv = NA, Colv = NA, scale = "column")
# Load required libraries
library(readxl)
library(SummarizedExperiment)
# Load data
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
data <- read_excel(file_path)
# Prepare data matrix and metadata
data_matrix <- as.matrix(data[ , c("M1_1_MSS", "M1_2_MSS", "M5_1_MSS", "M5_2_MSS",
"T49_1_MSS", "T49_2_MSS", "M42_1_PD", "M42_2_PD",
"M43_1_PD", "M43_2_PD", "M64_1_PD", "M64_2_PD")])
# Metadata for rows (samples)
sample_metadata <- data.frame(
row.names = colnames(data_matrix),
condition = c(rep("MSS", 6), rep("PD", 6))
)
# Create SummarizedExperiment object
se <- SummarizedExperiment(
assays = list(counts = data_matrix),
colData = sample_metadata
)
# Load required libraries
library(readxl)
library(SummarizedExperiment)
# Load data
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
data <- read_excel(file_path)
# Load required libraries
library(readxl)
library(SummarizedExperiment)
# Load data
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
data <- read_excel(file_path)
# Prepare data matrix and metadata
data_matrix <- as.matrix(data[ , c("M1_1_MSS", "M1_2_MSS", "M5_1_MSS", "M5_2_MSS",
"T49_1_MSS", "T49_2_MSS", "M42_1_PD", "M42_2_PD",
"M43_1_PD", "M43_2_PD", "M64_1_PD", "M64_2_PD")])
# Metadata for rows (samples)
sample_metadata <- data.frame(
row.names = colnames(data_matrix),
condition = c(rep("MSS", 6), rep("PD", 6))
)
# Create SummarizedExperiment object
se <- SummarizedExperiment(
assays = list(counts = data_matrix),
colData = sample_metadata
)
# Summary statistics
summary(assay(se, "counts"))
# Boxplot to visualize distribution
boxplot(assay(se, "counts"))
# Heatmap to explore patterns in data
heatmap(assay(se, "counts"), Rowv = NA, Colv = NA, scale = "column")
# Aplicar una transformación logarítmica a los datos para reducir la variabilidad
log_counts <- log2(assay(se, "counts") + 1)  # +1 para evitar log(0)
# Reemplazar la matriz de conteo en el objeto SummarizedExperiment
assay(se, "counts") <- log_counts
# Generar un heatmap con datos transformados logarítmicamente
library(pheatmap)
install.packages("pheatmap")
# Generar un heatmap con datos transformados logarítmicamente
library(pheatmap)
pheatmap(
assay(se, "counts"),
scale = "row",  # Escalar por fila para ver variaciones entre muestras
annotation_col = colData(se),  # Añadir anotación de condiciones
main = "Heatmap of Phosphoproteomics Data (Log-transformed)"
)
# Generar un heatmap con datos transformados logarítmicamente
library(pheatmap)
# Reemplazar valores no finitos (NA, NaN, Inf) por 0
assay(se, "counts")[!is.finite(assay(se, "counts"))] <- 0
pheatmap(
assay(se, "counts"),
scale = "row",  # Escalar por fila para ver variaciones entre muestras
annotation_col = colData(se),  # Añadir anotación de condiciones
main = "Heatmap of Phosphoproteomics Data (Log-transformed)"
)
# Generar un heatmap con datos transformados logarítmicamente
library(pheatmap)
# Reemplazar valores no finitos (NA, NaN, Inf) por 0
assay(se, "counts")[!is.finite(assay(se, "counts"))] <- 0
# Generar el heatmap nuevamente
pheatmap(
assay(se, "counts"),
scale = "row",
annotation_col = colData(se),
main = "Heatmap of Phosphoproteomics Data (Log-transformed)"
)
# Generar un heatmap con datos transformados logarítmicamente
library(pheatmap)
# Reemplazar valores no finitos por el promedio de la fila
assay(se, "counts") <- t(apply(assay(se, "counts"), 1, function(x) {
x[!is.finite(x)] <- mean(x, na.rm = TRUE)
return(x)
}))
# Generar el heatmap nuevamente
pheatmap(
assay(se, "counts"),
scale = "row",
annotation_col = colData(se),
main = "Heatmap of Phosphoproteomics Data (Log-transformed)"
)
# Reemplazar todos los valores no finitos por 0
assay(se, "counts")[!is.finite(assay(se, "counts"))] <- 0
# Remover filas que contengan solo ceros
non_zero_rows <- rowSums(assay(se, "counts")) != 0
se_filtered <- se[non_zero_rows, ]
# Generar el heatmap nuevamente con datos limpios
pheatmap(
assay(se_filtered, "counts"),
scale = "row",
annotation_col = colData(se_filtered),
main = "Heatmap of Phosphoproteomics Data (Log-transformed)"
)
# Asegúrate de que `annotation_col` es un DataFrame de una sola columna
annotation_col <- data.frame(condition = colData(se_filtered)$condition)
rownames(annotation_col) <- colnames(assay(se_filtered, "counts"))
# Generar el heatmap nuevamente
pheatmap(
assay(se_filtered, "counts"),
scale = "row",
annotation_col = annotation_col,
main = "Heatmap of Phosphoproteomics Data (Log-transformed)"
)
# Load required libraries
library(readxl)
library(SummarizedExperiment)
# Load data
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
data <- read_excel(file_path)
# Prepare data matrix and metadata
data_matrix <- as.matrix(data[ , c("M1_1_MSS", "M1_2_MSS", "M5_1_MSS", "M5_2_MSS",
"T49_1_MSS", "T49_2_MSS", "M42_1_PD", "M42_2_PD",
"M43_1_PD", "M43_2_PD", "M64_1_PD", "M64_2_PD")])
# Metadata for rows (samples)
sample_metadata <- data.frame(
row.names = colnames(data_matrix),
condition = c(rep("MSS", 6), rep("PD", 6))
)
# Create SummarizedExperiment object
se <- SummarizedExperiment(
assays = list(counts = data_matrix),
colData = sample_metadata
)
# Summary statistics
summary(assay(se, "counts"))
# Boxplot to visualize distribution
boxplot(assay(se, "counts"))
# Heatmap to explore patterns in data
heatmap(assay(se, "counts"), Rowv = NA, Colv = NA, scale = "column")
# Aplicar una transformación logarítmica a los datos para reducir la variabilidad
log_counts <- log2(assay(se, "counts") + 1)  # +1 para evitar log(0)
# Reemplazar la matriz de conteo en el objeto SummarizedExperiment
assay(se, "counts") <- log_counts
# Asegúrate de que `annotation_col` es un DataFrame de una sola columna
annotation_col <- data.frame(condition = colData(se_filtered)$condition)
rownames(annotation_col) <- colnames(assay(se_filtered, "counts"))
# Generar el heatmap nuevamente
pheatmap(
assay(se_filtered, "counts"),
scale = "row",
annotation_col = annotation_col,
main = "Heatmap of Phosphoproteomics Data (Log-transformed)"
)
# Load required libraries
library(readxl)
library(SummarizedExperiment)
# Load data
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
data <- read_excel(file_path)
# Prepare data matrix and metadata
data_matrix <- as.matrix(data[ , c("M1_1_MSS", "M1_2_MSS", "M5_1_MSS", "M5_2_MSS",
"T49_1_MSS", "T49_2_MSS", "M42_1_PD", "M42_2_PD",
"M43_1_PD", "M43_2_PD", "M64_1_PD", "M64_2_PD")])
# Metadata for rows (samples)
sample_metadata <- data.frame(
row.names = colnames(data_matrix),
condition = c(rep("MSS", 6), rep("PD", 6))
)
# Create SummarizedExperiment object
se <- SummarizedExperiment(
assays = list(counts = data_matrix),
colData = sample_metadata
)
# Summary statistics
summary(assay(se, "counts"))
# Boxplot to visualize distribution
boxplot(assay(se, "counts"))
# Heatmap to explore patterns in data
heatmap(assay(se, "counts"), Rowv = NA, Colv = NA, scale = "column")
# Aplicar una transformación logarítmica a los datos para reducir la variabilidad
log_counts <- log2(assay(se, "counts") + 1)  # +1 para evitar log(0)
# Reemplazar la matriz de conteo en el objeto SummarizedExperiment
assay(se, "counts") <- log_counts
# Asegúrate de que `annotation_col` es un DataFrame de una sola columna
annotation_col <- data.frame(condition = colData(se_filtered)$condition)
rownames(annotation_col) <- colnames(assay(se_filtered, "counts"))
# Generar el heatmap nuevamente
pheatmap(
assay(se_filtered, "counts"),
scale = "row",
annotation_col = annotation_col,
main = "Heatmap of Phosphoproteomics Data (Log-transformed)"
)
