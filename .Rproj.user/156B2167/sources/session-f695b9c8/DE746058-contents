---
title: "PEC1"
output: html_document
date: "2024-11-06"
---
1. Descarga de Datos

Para comenzar, se descargó el repositorio de GitHub que contiene el conjunto de datos necesario para el análisis. El repositorio utilizado es nutrimetabolomics/metaboData, que proporciona los datos en formato .XLSX.

Para descargar los datos:

# Dirígete al directorio donde quieres clonar el repositorio
cd ~
# Clonar el repositorio
git clone https://github.com/nutrimetabolomics/metaboData.git

2. Carga de Datos

En R, se cargaron los datos desde el archivo .XLSX utilizando la librería readxl.

```{r}
# Load required libraries
library(readxl)
library(SummarizedExperiment)

# Load data
file_path <- "TIO2+PTYR-human-MSS+MSIvsPD.XLSX"
data <- read_excel(file_path)
```

3. Preparación de la Matriz de Datos y Metadatos

Se extrajo la matriz de datos necesaria para el análisis, seleccionando las columnas específicas para cada condición. A continuación, se creó un marco de datos para los metadatos de las muestras, agrupándolas según las condiciones experimentales: MSS y PD.
```{r}
# Prepare data matrix and metadata
data_matrix <- as.matrix(data[ , c("M1_1_MSS", "M1_2_MSS", "M5_1_MSS", "M5_2_MSS", 
                                   "T49_1_MSS", "T49_2_MSS", "M42_1_PD", "M42_2_PD", 
                                   "M43_1_PD", "M43_2_PD", "M64_1_PD", "M64_2_PD")])

# Metadata for rows (samples)
sample_metadata <- data.frame(
  row.names = colnames(data_matrix),
  condition = c(rep("MSS", 6), rep("PD", 6))
)

# Create SummarizedExperiment object
se <- SummarizedExperiment(
  assays = list(counts = data_matrix),
  colData = sample_metadata
)

```

4. Exploración de los Datos

Se realizaron diversas visualizaciones para comprender la distribución y las posibles relaciones en los datos:

    Estadísticas resumidas: Para obtener una visión general de los valores.
    Boxplot: Para visualizar la distribución de los datos.
    Heatmap: Para explorar patrones y relaciones.

```{r}

# Summary statistics
summary(assay(se, "counts"))

# Boxplot to visualize distribution
boxplot(assay(se, "counts"))

# Heatmap to explore patterns in data
heatmap(assay(se, "counts"), Rowv = NA, Colv = NA, scale = "column")
```

5. Transformación de Datos

Para reducir la variabilidad en los datos, se aplicó una transformación logarítmica. Esto permite analizar los datos con una distribución más uniforme, facilitando la identificación de patrones en el heatmap.
```{r}

# Aplicar una transformación logarítmica a los datos para reducir la variabilidad
log_counts <- log2(assay(se, "counts") + 1)  # +1 para evitar log(0)

# Reemplazar la matriz de conteo en el objeto SummarizedExperiment
assay(se, "counts") <- log_counts

```


6. Visualización Avanzada

Se generó un heatmap de los datos transformados utilizando la librería pheatmap, con anotaciones para las condiciones.

```{r}
library(pheatmap)


# Asegúrate de que `annotation_col` es un DataFrame de una sola columna
annotation_col <- data.frame(condition = colData(se)$condition)
rownames(annotation_col) <- colnames(assay(se, "counts"))

# Generar el heatmap nuevamente
pheatmap(
    assay(se, "counts"),
    scale = "row",
    annotation_col = annotation_col,
    main = "Heatmap of Phosphoproteomics Data (Log-transformed)",
    cluster_rows = FALSE,  # Desactivar clustering de filas
    cluster_cols = FALSE   # Desactivar clustering de columnas
)



```

Actualización de Git y Subida del Proyecto a GitHub

Configuración de la URL Remota Correcta
Comencé asegurándome de que la URL remota en Git apuntara al repositorio correcto. Dado que la URL anterior era incorrecta, la actualicé con el siguiente comando:

git remote set-url origin https://github.com/atelleria18/TELLERIA-Flores-Amaia-PEC1.git

Autenticación con un Token de Acceso Personal (PAT)
Debido a los cambios en GitHub, ahora se usa un Token de Acceso Personal (PAT) en lugar de la contraseña tradicional para autenticarse. Cuando Git solicitó las credenciales, ingresé mi nombre de usuario de GitHub (atelleria18) y, en lugar de una contraseña, pegué mi token de acceso personal.

Subida de los Cambios al Repositorio
Realicé el push de la rama principal (main) al repositorio remoto en GitHub, configurando el seguimiento remoto para futuras actualizaciones:

git push -u origin main






